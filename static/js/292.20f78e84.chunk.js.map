{"version":3,"file":"static/js/292.20f78e84.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Navigation/UserMenu/UserMenu.module.css?fbec","components/Navigation/UserMenu/UserMenu.jsx","components/randomAvatar/randomAvatar.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Phonebook/ContactForm/ContactForm.module.css?f727","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","webpack://react-homework-template/./src/components/Phonebook/Contact/Contact.module.css?7ca9","components/Phonebook/Contact/Contact.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactList.module.css?f152","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/Filter.module.css?44e1","components/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Phonebook/Phonebook.module.css?1c37","pages/Phonebook/Phonebook.jsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","utils/capitalize.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"headerField\":\"UserMenu_headerField__2tOJt\",\"greating\":\"UserMenu_greating__w1whN\",\"mailField\":\"UserMenu_mailField__-ID10\",\"avatar\":\"UserMenu_avatar__7hYNP\",\"mail\":\"UserMenu_mail__7INQQ\"};","import { useSelector } from 'react-redux';\nimport { selectEmail, selectUsername } from 'redux/auth/auth-selectors';\nimport { randomAvatar } from 'components/randomAvatar/randomAvatar';\nimport style from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const name = useSelector(selectUsername);\n  const email = useSelector(selectEmail);\n\n  return (\n    <>\n      <div className={style.headerField}>\n        <p className={style.greating}>\n          Hello, <b>{name}!</b>\n        </p>\n        <div className={style.mailField}>\n          <img className={style.avatar} src={randomAvatar} alt=\"Icon\" />\n          <p className={style.mail}>{email}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { AvatarGenerator } from 'random-avatar-generator';\n\nconst generator = new AvatarGenerator();\nexport const randomAvatar = generator.generateRandomAvatar();","export const selectContacts = state => state.contacts.items;\n\nexport const selectContactNumber = state => state.contacts.items.number;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContact = state => state.filters;","// extracted by mini-css-extract-plugin\nexport default {\"formField\":\"ContactForm_formField__O6djv\",\"formField__label\":\"ContactForm_formField__label__DHnGf\",\"formField__input\":\"ContactForm_formField__input__m4ngV\",\"formField__btn\":\"ContactForm_formField__btn__qmFzP\"};","import PropTypes from 'prop-types';\nimport style from './ContactForm.module.css';\n\nexport default function ContactForm({ addContact }) {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    addContact({\n      name: form.elements.name.value,\n      phone: form.elements.phone.value,\n    });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.formField}>\n      <label className={style.formField__label}>\n        Name\n        <input\n          className={style.formField__input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={style.formField__label}>\n        Number\n        <input\n          className={style.formField__input}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"111-11-11\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={style.formField__btn}>\n        Add Contact\n      </button>\n    </form>\n  );\n}\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Notification_message__iUHOw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <>\n    <p className={style.message}>{message}</p>\n  </>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList__item\":\"Contact_contactsList__item__90urv\",\"contactsList__btn\":\"Contact_contactsList__btn__5NSnE\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/operations';\n\nimport style from './Contact.module.css';\n\nexport const Contact = ({ _id, name, phone }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(_id));\n\n  return (\n    <div className={style.contactsList__item}>\n      <span className={style.contactsList__info}>\n        <b>{name}:</b> {phone}\n      </span>\n      <button className={style.contactsList__btn} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsField\":\"ContactList_contactsField__lWvNP\",\"contactsList\":\"ContactList_contactsList__zfzho\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../../Notification/Notification';\nimport { Contact } from '../Contact/Contact';\n\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <div className={style.contactsField}>\n      {contacts?.length < 0 ? (\n        <Notification message=\"You don't have any contact 😓\" />\n      ) : (\n        <ul className={style.contactsList}>\n          {contacts.map(({ _id, name, phone }, i) => (\n            <li key={i}>\n              <Contact _id={_id} name={name} phone={phone} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string,\n      name: PropTypes.string,\n      phone: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterField\":\"Filter_filterField__15idU\",\"filterField__label\":\"Filter_filterField__label__qRnpK\",\"filterField__input\":\"Filter_filterField__input__bAT3Y\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Filter.module.css';\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <form className={style.filterField}>\n      <label className={style.filterField__label}>\n        Find contacts by name\n        <input\n          className={style.filterField__input}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          value={filter}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </form>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"PhoneBook\":\"Phonebook_PhoneBook__u5Hx9\",\"PhoneBook__title\":\"Phonebook_PhoneBook__title__uTw+x\",\"container\":\"Phonebook_container__LkQx3\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectFilterContact,\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/selectors';\nimport { addContact, fetchContacts } from '../../redux/contacts/operations';\nimport { updateFilter } from '../../redux/contacts/filterSlice';\nimport ContactForm from 'components/Phonebook/ContactForm/ContactForm';\nimport ContactList from 'components/Phonebook/ContactList/ContactList';\nimport Filter from 'components/Phonebook/Filter/Filter';\nimport Loader from '../../components/Loader/Loader';\nimport UserMenu from '../../components/Navigation/UserMenu/UserMenu';\n\nimport { toast } from 'react-toastify';\nimport style from './Phonebook.module.css';\nimport capitalize from 'utils/capitalize';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterContact);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const filterContacts = contacts => {\n    return contacts?.filter(contact =>\n      contact.name?.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const doesAlreadyExist = newContact => {\n    for (const { name } of contacts) {\n      if (name === newContact.name) {\n        return name;\n      }\n    }\n    return false;\n  };\n\n  const addContactsForm = newContact => {\n    if (doesAlreadyExist(newContact)) {\n      toast.error(\n        `${capitalize(\n          newContact.name\n        )}'s contact already exists. Please, next time be more attentive to what you are trying to add`\n      );\n      return;\n    }\n    dispatch(addContact(newContact));\n  };\n\n  const handleChange = evt => {\n    dispatch(updateFilter(evt.currentTarget.value));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserMenu />\n      <div className={style.PhoneBook}>\n        <div className={style.container}>\n          <h2 className={style.PhoneBook__title}>Phonebook</h2>\n          <ContactForm addContact={addContactsForm} />\n        </div>\n\n        <div className={style.container}>\n          <h2 className={style.PhoneBook__title}>Contacts</h2>\n          <Filter handleChange={handleChange} filter={filter} />\n          {isLoading && !error && <Loader />}\n          <ContactList contacts={filterContacts(contacts)} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PhoneBook;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function capitalize(str) {\n  return str\n    .split(' ')\n    .map(word => `${word[0].toUpperCase()}${word.slice(1)}`)\n    .join(' ');\n}"],"names":["UserMenu","name","useSelector","selectUsername","email","selectEmail","className","style","src","randomAvatar","alt","AvatarGenerator","generateRandomAvatar","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterContact","filters","ContactForm","addContact","onSubmit","evt","preventDefault","form","target","elements","value","phone","reset","type","placeholder","pattern","title","required","message","Contact","_id","dispatch","useDispatch","onClick","deleteContact","length","map","i","handleChange","filter","onChange","doesAlreadyExist","newContact","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","useEffect","fetchContacts","toast","split","word","toUpperCase","slice","join","updateFilter","currentTarget","Loader","contact","toLowerCase","includes","filterContacts"],"sourceRoot":""}